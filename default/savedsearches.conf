[Errors by status]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = `casproxyevents` | search `$scope$` | search status>400 | chart count by status

[Errors versus proper operations]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = `casproxyevents` | search `$scope$` | eval ok=if(status>=200 AND status<300,1,0) | eval technical=if(status>=300 AND status<400,1,0) | eval error=if(status>=400,1,0) | timechart sum(ok) as proper, sum(technical) as technical, sum(error) as error

[Granted tickets over time]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = `casevents` | search `$scope$` | search service=* ACTION=TICKET_GRANTING_TICKET_CREATED | rename _time as time | convert ctime(time) | eval service=urldecode(service) | table time grantee service_ticket service

[Requests status over service operation]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = `casproxyevents` | search `$scope$` | transaction clientip username startswith=(service_name=*) | chart count over service_name by status

[Service errors chart]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = `casproxyevents` | search status>400 | stats count by service_name, username, status | sort service_name username status count | sort -count

[Service module chart]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = `casproxyevents` | search `$scope$` | stats count by service_name

[Service module daily activity]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = `casproxyevents` | search `$scope$` | search NOT username="-" | eval day_time=if(len(date_hour)=1,"0".date_hour,date_hour) | chart count over service_name by day_time

[Top users by service chart]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = `casproxyevents` | search `$scope$` | search NOT username="-" | chart count over service_name by username useother=f

[User authorization]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = `casevents` | search `$scope$` | timechart count by ACTION usenull=f

[User daily activity]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = `casproxyevents` | search `$scope$` | search NOT username="-" | eval day_time=if(len(date_hour)=1,"0".date_hour,date_hour) | chart count over username by day_time

[User service utilization and errors]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = `casproxyevents` | search `$scope$` | eval error=if(status>=400,status,null) | transaction clientip username startswith=(service_name=*) keepevicted=true | where username!="-" | eval url=urldecode(url) | stats values(clientip) as ip, values(error) as err_codes, sum(duration) as duration, sum(eventcount) as eventcount by service_name, username | eval duration=tostring(duration, "duration") | table username service_name err_codes ip duration eventcount | sort -duration

[Currently logged users]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = `casproxyevents` | search `$scope$` | transaction clientip username maxspan=8h startswith="GET /auth/login" endswith=("GET /auth/logout") keepevicted=true | where now()-(8*3600)<_time | search NOT ("GET /auth/logout" OR username="-") | search service=* | stats dc(username) as logged_in

[Currently logged users by service]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = `casproxyevents` | search `$scope$` | transaction clientip username maxspan=8h startswith="GET /auth/login" endswith=("GET /auth/logout") keepevicted=true | where now()-(8*3600)<_time | search NOT ("GET /auth/logout" OR username="-") | search service=* | stats dc(username) as logged_in by service_name

